name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build + Release (.NET Framework 4.6.2)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: 'latest'

      - name: Restore NuGet packages
        run: nuget restore DNet.sln

      - name: Build solution
        run: msbuild DNet.sln /p:Configuration=Release

      # - name: Run NUnit Tests
      #   run: |
      #     $testDll = "DNET.Test\bin\Release\DNET.Test.dll"
      #     if (-Not (Test-Path $testDll)) {
      #       Write-Error "Test DLL not found: $testDll"
      #       exit 1
      #     }

      #     # 查找 vstest.console.exe
      #     $vsTestPath = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" `
      #       -latest -products * -requires Microsoft.VisualStudio.PackageGroup.TestTools.Core `
      #       -find **\vstest.console.exe

      #     if (-not (Test-Path $vsTestPath)) {
      #       Write-Error "vstest.console.exe not found"
      #       exit 1
      #     }

      #     & "$vsTestPath" "$testDll"

      - name: Zip release output
        run: |
          mkdir output
          Copy-Item -Recurse -Path DNET\bin\Release\* -Destination output
          Compress-Archive -Path output\* -DestinationPath DNET-Build.zip

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DNET-Release-Zip
          path: DNET-Build.zip

      # 🔽 添加 changelog 收集逻辑
      - name: Generate changelog
        id: changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"%h %s" $(git describe --tags --abbrev=0 || echo "")..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 🔽 发布 Release 并附带变更日志
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: DNET-Build.zip
          body: |
            🚀 自动发布版本

            📦 变更内容:
            ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
