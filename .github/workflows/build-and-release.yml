name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build + Release (.NET Framework 4.6.2)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 必须拉取完整历史，否则 git describe 无法正常工作

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: 'latest'

      - name: Restore NuGet packages
        run: nuget restore DNet.sln

      - name: Build solution
        run: msbuild DNet.sln /p:Configuration=Release

      - name: Zip release output
        run: |
          mkdir output
          Copy-Item -Recurse -Path DNET\bin\Release\* -Destination output
          Compress-Archive -Path output\* -DestinationPath DNET-Build.zip

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DNET-Release-Zip
          path: DNET-Build.zip

      # 🔽 添加 changelog 收集逻辑
      - name: Generate changelog
        id: changelog
        shell: pwsh
        run: |
          $lastTag = git describe --tags --abbrev=0 2>$null
          if ([string]::IsNullOrWhiteSpace($lastTag)) {
            Write-Host "⚠️ 没有找到 tag, 使用完整提交历史"
            $log = git log --pretty=format:"%h %s"
          } else {
            Write-Host "📝 使用从 $lastTag 到 HEAD 的提交记录"
            $log = git log --pretty=format:"%h %s" "$lastTag..HEAD"
          }

          Write-Host "----- changelog start -----"
          Write-Host $log
          Write-Host "----- changelog end -----"

          Add-Content -Path $env:GITHUB_OUTPUT -Value "changelog<<EOF"
          $log.Split("`n") | ForEach-Object { Add-Content -Path $env:GITHUB_OUTPUT -Value $_ }
          Add-Content -Path $env:GITHUB_OUTPUT -Value "EOF"

      # 🔽 发布 Release 并附带变更日志
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: DNET-Build.zip
          body: |
            🚀 自动发布版本

            📦 变更内容:
            ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
